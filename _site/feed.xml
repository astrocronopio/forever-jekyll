<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="en" /><updated>2022-05-25T18:56:50-04:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">evelyn@home</title><subtitle>Code &amp; Miscellanea.</subtitle><entry><title type="html">C++ - std::istringstream</title><link href="http://localhost:4000/coding/c++/cpp/2022/05/25/cpp-istringstream/" rel="alternate" type="text/html" title="C++ - std::istringstream" /><published>2022-05-25T00:00:00-04:00</published><updated>2022-05-25T00:00:00-04:00</updated><id>http://localhost:4000/coding/c++/cpp/2022/05/25/cpp-istringstream</id><content type="html" xml:base="http://localhost:4000/coding/c++/cpp/2022/05/25/cpp-istringstream/"><![CDATA[]]></content><author><name></name></author><category term="coding" /><category term="c++" /><category term="cpp" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">C++ - Static Data Members &amp;amp; Static Functions</title><link href="http://localhost:4000/coding/c++/cpp/2022/05/17/cpp-stuff-i-found-hard/" rel="alternate" type="text/html" title="C++ - Static Data Members &amp;amp; Static Functions" /><published>2022-05-17T00:00:00-04:00</published><updated>2022-05-17T00:00:00-04:00</updated><id>http://localhost:4000/coding/c++/cpp/2022/05/17/cpp-stuff-i-found-hard</id><content type="html" xml:base="http://localhost:4000/coding/c++/cpp/2022/05/17/cpp-stuff-i-found-hard/"><![CDATA[<p>Long time ago, I found a really nice example to understand it and I’m writing this post to document it. It took me a long time to understand what a static member/function is, why and when I should use it.</p>

<h2 id="creating-a-toy-class">Creating a toy class</h2>

<p>Let’s create small code where we will emulate a service with users. We want to know at any time how many users we have, how can we do that?</p>

<h4 id="code-for-the-user-class">Code for the <code class="language-plaintext highlighter-rouge">user</code> class:</h4>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">User</span><span class="p">{</span>

	<span class="nl">public:</span>
		<span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">name</span><span class="p">;</span>
		<span class="n">User</span><span class="p">(){</span> <span class="c1">// Constr</span>

		<span class="p">};</span>
		<span class="o">~</span><span class="n">User</span><span class="p">(){</span>  <span class="c1">//Destr</span>

		<span class="p">};</span>
<span class="p">};</span>
</code></pre></div></div>

<h4 id="counting-the-users-in-the-main-function">Counting the users in the main function:</h4>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
	<span class="kt">int</span> <span class="n">user_counter</span> <span class="o">=</span> <span class="mi">2</span> <span class="p">;</span>
	<span class="n">User</span> <span class="n">user1</span><span class="p">,</span> <span class="n">user2</span><span class="p">;</span>

	<span class="n">user2</span><span class="p">.</span><span class="o">~</span><span class="n">User</span><span class="p">();</span>
	<span class="n">user_counter</span><span class="o">--</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>This is not a good solution, I would have to count every time I create/delete a new user by hand. Wouldn’t it be nice to make c++ count for us? This is why we want to use a single variable inside the class to count: This is a static variable.</p>

<h2 id="creating-the-user-class-with-a-static-counter">Creating the <code class="language-plaintext highlighter-rouge">user</code> class with a static counter</h2>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">User</span><span class="p">{</span>

	<span class="k">static</span> <span class="kt">int</span> <span class="n">user_counter</span><span class="p">;</span>
	<span class="nl">public:</span>
		<span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">name</span><span class="p">;</span>

		<span class="n">User</span><span class="p">(){</span> <span class="c1">// Constr</span>
			<span class="n">user_counter</span><span class="o">++</span><span class="p">;</span>
		<span class="p">};</span>

		<span class="o">~</span><span class="n">User</span><span class="p">(){</span>  <span class="c1">//Destr</span>
			<span class="n">user_counter</span><span class="o">--</span><span class="p">;</span>
		<span class="p">};</span>
<span class="p">};</span>
</code></pre></div></div>

<p>Now, the <code class="language-plaintext highlighter-rouge">user_counter</code> value goes up/down when the constructor/destructor is called.</p>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
	<span class="n">User</span> <span class="n">user1</span><span class="p">,</span> <span class="n">user2</span><span class="p">;</span> <span class="c1">//user_counter = 2 </span>
	<span class="n">user2</span><span class="p">.</span><span class="o">~</span><span class="n">User</span><span class="p">();</span> <span class="c1">//user_counter = 1</span>
<span class="p">}</span>
</code></pre></div></div>
<h2 id="how-do-we-access-this-static-counter-static-functions">How do we access this static counter?: Static Functions</h2>

<p>“Normal” functions can’t access static variables, and it makes sense since these variables are global to every instance of the class, i.e. the number of users can’t be accessed easily as it’s shared by everyone.</p>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">User</span><span class="p">{</span>

	<span class="k">static</span> <span class="kt">int</span> <span class="n">user_counter</span><span class="p">;</span>
	<span class="nl">public:</span>
		<span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">name</span><span class="p">;</span>

		<span class="k">static</span> <span class="kt">int</span> <span class="n">get_user_count</span><span class="p">()</span> <span class="p">{</span><span class="k">return</span> <span class="n">user_counter</span><span class="p">;}</span>

		<span class="n">User</span><span class="p">(){</span> <span class="c1">// Constr</span>
			<span class="n">user_counter</span><span class="o">++</span><span class="p">;</span>
		<span class="p">};</span>

		<span class="o">~</span><span class="n">User</span><span class="p">(){</span>  <span class="c1">//Destr</span>
			<span class="n">user_counter</span><span class="o">--</span><span class="p">;</span>
		<span class="p">};</span>
<span class="p">};</span>
</code></pre></div></div>

<p>Great, but  how do i initiate the <code class="language-plaintext highlighter-rouge">user_counter</code> variable? It’s a shared variable, so we can’t simply write <code class="language-plaintext highlighter-rouge">static int user_counter = 0</code> inside the user class, so need to initiate outside of it!</p>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//Below the User class</span>
<span class="kt">int</span> <span class="n">User</span><span class="o">::</span><span class="n">user_counter</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> 

<span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
	<span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">User</span><span class="o">::</span><span class="n">get_user_count</span><span class="p">()</span> <span class="o">&lt;&lt;</span> <span class="s">"</span><span class="se">\n</span><span class="s">"</span><span class="p">;</span>
	<span class="n">User</span> <span class="n">user1</span><span class="p">,</span> <span class="n">user2</span><span class="p">;</span> <span class="c1">//user_counter = 2</span>

	<span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">User</span><span class="o">::</span><span class="n">get_user_count</span><span class="p">()</span> <span class="o">&lt;&lt;</span> <span class="s">"</span><span class="se">\n</span><span class="s">"</span><span class="p">;</span>
	<span class="n">user2</span><span class="p">.</span><span class="o">~</span><span class="n">User</span><span class="p">();</span> <span class="c1">//user_counter = 1</span>

	<span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">User</span><span class="o">::</span><span class="n">get_user_count</span><span class="p">()</span> <span class="o">&lt;&lt;</span> <span class="s">"</span><span class="se">\n</span><span class="s">"</span><span class="p">;</span>	
<span class="p">}</span>
<span class="n">Output</span><span class="o">:</span>
<span class="mi">0</span>
<span class="mi">2</span>
<span class="mi">1</span>
</code></pre></div></div>

<p>The full working code:</p>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span>
<span class="k">class</span> <span class="nc">User</span><span class="p">{</span>

	<span class="k">static</span> <span class="kt">int</span> <span class="n">user_counter</span><span class="p">;</span>
	<span class="nl">public:</span>
		<span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">name</span><span class="p">;</span>

		<span class="k">static</span> <span class="kt">int</span> <span class="n">get_user_count</span><span class="p">()</span> <span class="p">{</span><span class="k">return</span> <span class="n">user_counter</span><span class="p">;}</span>

		<span class="n">User</span><span class="p">(){</span> <span class="c1">// Constr</span>
			<span class="n">user_counter</span><span class="o">++</span><span class="p">;</span>
		<span class="p">};</span>

		<span class="o">~</span><span class="n">User</span><span class="p">(){</span>  <span class="c1">//Destr</span>
			<span class="n">user_counter</span><span class="o">--</span><span class="p">;</span>
		<span class="p">};</span>
<span class="p">};</span>

<span class="kt">int</span> <span class="n">User</span><span class="o">::</span><span class="n">user_counter</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> 

<span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
	<span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">User</span><span class="o">::</span><span class="n">get_user_count</span><span class="p">()</span> <span class="o">&lt;&lt;</span> <span class="s">"</span><span class="se">\n</span><span class="s">"</span><span class="p">;</span>
	<span class="n">User</span> <span class="n">user1</span><span class="p">,</span> <span class="n">user2</span><span class="p">;</span> <span class="c1">//user_counter = 2</span>

	<span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">User</span><span class="o">::</span><span class="n">get_user_count</span><span class="p">()</span> <span class="o">&lt;&lt;</span> <span class="s">"</span><span class="se">\n</span><span class="s">"</span><span class="p">;</span>
	<span class="n">user2</span><span class="p">.</span><span class="o">~</span><span class="n">User</span><span class="p">();</span> <span class="c1">//user_counter = 1</span>

	<span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">User</span><span class="o">::</span><span class="n">get_user_count</span><span class="p">()</span> <span class="o">&lt;&lt;</span> <span class="s">"</span><span class="se">\n</span><span class="s">"</span><span class="p">;</span>	
<span class="p">}</span>
</code></pre></div></div>]]></content><author><name></name></author><category term="coding" /><category term="c++" /><category term="cpp" /><summary type="html"><![CDATA[Long time ago, I found a really nice example to understand it and I’m writing this post to document it. It took me a long time to understand what a static member/function is, why and when I should use it. Creating a toy class Let’s create small code where we will emulate a service with users. We want to know at any time how many users we have, how can we do that? Code for the user class: class User{ public: std::string name; User(){ // Constr }; ~User(){ //Destr }; }; Counting the users in the main function: int main(){ int user_counter = 2 ; User user1, user2; user2.~User(); user_counter--; } This is not a good solution, I would have to count every time I create/delete a new user by hand. Wouldn’t it be nice to make c++ count for us? This is why we want to use a single variable inside the class to count: This is a static variable. Creating the user class with a static counter class User{ static int user_counter; public: std::string name; User(){ // Constr user_counter++; }; ~User(){ //Destr user_counter--; }; }; Now, the user_counter value goes up/down when the constructor/destructor is called. int main(){ User user1, user2; //user_counter = 2 user2.~User(); //user_counter = 1 } How do we access this static counter?: Static Functions “Normal” functions can’t access static variables, and it makes sense since these variables are global to every instance of the class, i.e. the number of users can’t be accessed easily as it’s shared by everyone. class User{ static int user_counter; public: std::string name; static int get_user_count() {return user_counter;} User(){ // Constr user_counter++; }; ~User(){ //Destr user_counter--; }; }; Great, but how do i initiate the user_counter variable? It’s a shared variable, so we can’t simply write static int user_counter = 0 inside the user class, so need to initiate outside of it! //Below the User class int User::user_counter = 0; int main(){ std::cout &lt;&lt; User::get_user_count() &lt;&lt; "\n"; User user1, user2; //user_counter = 2 std::cout &lt;&lt; User::get_user_count() &lt;&lt; "\n"; user2.~User(); //user_counter = 1 std::cout &lt;&lt; User::get_user_count() &lt;&lt; "\n"; } Output: 0 2 1 The full working code: #include &lt;iostream&gt; class User{ static int user_counter; public: std::string name; static int get_user_count() {return user_counter;} User(){ // Constr user_counter++; }; ~User(){ //Destr user_counter--; }; }; int User::user_counter = 0; int main(){ std::cout &lt;&lt; User::get_user_count() &lt;&lt; "\n"; User user1, user2; //user_counter = 2 std::cout &lt;&lt; User::get_user_count() &lt;&lt; "\n"; user2.~User(); //user_counter = 1 std::cout &lt;&lt; User::get_user_count() &lt;&lt; "\n"; }]]></summary></entry><entry><title type="html">Kadane’s Algorithm &amp;amp; LeetCode 53 Maximum Subarray</title><link href="http://localhost:4000/coding/leetcode/2022/05/11/Kadane/" rel="alternate" type="text/html" title="Kadane’s Algorithm &amp;amp; LeetCode 53 Maximum Subarray" /><published>2022-05-11T00:00:00-04:00</published><updated>2022-05-11T00:00:00-04:00</updated><id>http://localhost:4000/coding/leetcode/2022/05/11/Kadane</id><content type="html" xml:base="http://localhost:4000/coding/leetcode/2022/05/11/Kadane/"><![CDATA[<p>Kadane’s Algorithm is used to obtain the maximum subarray sum, as seen in the <a href="https://leetcode.com/problems/maximum-subarray/">Leetcode 53. Maximum Subarray</a>:</p>

<blockquote>
  <p>Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.<br />
A subarray is a contiguous part of an array.
Example:
<strong>Input</strong>: nums = [-2,1,-3,4,-1,2,1,-5,4]<br />
<strong>Output</strong>: 6<br />
<strong>Explanation</strong>: [4,-1,2,1] has the largest sum = 6.<br /></p>
</blockquote>

<h2 id="brute-force-approach">Brute-force Approach</h2>

<p>Let’s take the example array:</p>

<blockquote>
  <p>[-2,1,-3,4,-1,2,1,-5,4]</p>
</blockquote>

<p>We can solve the problem via <strong>brute-force</strong> but it goes as  $O(n²)$:</p>

<pre><code class="language-python=">def maxSubArray(self, nums: List[int]) -&gt; int:
    best_sum = 0
    current_sum = 0
    
    if len(nums)==1: return nums[0]
        
    for i,x in enumerate(nums):
        current_sum=x
        for  y in nums[i+1:]:
            current_sum = current_sum + y
            if current_sum&gt;best_sum:
                best_sum = current_sum

    return best_sum    
</code></pre>

<p>Basically, we calculate the following sums:</p>

<blockquote>
  <p>Fix the first value: -2
1.1: -2+1 = -1 &lt;- best_sum
1.2: -2+1-3 = -4
1.3: -2+1-3+4 = 0 &lt;- best_sum
1.4: -2+1-3+4-1 = -1
….
Fix the fourth value: 4
4.1: 4-1 = 3
4.2: 4-1+2 = 5 &lt;- best_sum
4.3: 4-1+2+1 = 6 &lt;-  best_sum, this won’t change
….</p>
</blockquote>

<h2 id="about-kadane">About Kadane:</h2>

<p><a href="https://www.stat.cmu.edu/~kadane/">Joseph Kadane</a> is a mathematician that provided this algorithm to solve the maximum subarray sum problem in $O(n)$ time complexity:</p>

<pre><code class="language-python=">def maxSubarraySum(numbers: List[int]) -&gt; int:
    best_sum = nums[0]
    current_sum = nums[0]

    for x in nums[1:]:
        current_sum = max(x, current_sum + x)
        best_sum = max(best_sum, current_sum)
    return best_sum
</code></pre>

<p>Easy? Not easy for me. Let’s dig deeper into why it works.</p>

<p>The full sum array: Fix the first value: -2</p>
<ol>
  <li>$-2+1 = -1$ $\rightarrow$ The second value $1$  alone has a higher sum than $-2+1$, therefore we ditch the $-2$ and we begin counting from $1$ for a new subarray, <code class="language-plaintext highlighter-rouge">current_sum=1</code>, <code class="language-plaintext highlighter-rouge">best_sum=1</code></li>
  <li>$1-3 = -2$ $\rightarrow$ The third value is lower than the sum with the previous <code class="language-plaintext highlighter-rouge">current_value</code> ($-2&gt;-3$), we continue a new subarray from last step. <code class="language-plaintext highlighter-rouge">current_sum=-2</code>, <code class="language-plaintext highlighter-rouge">best_sum=1</code></li>
  <li>$1-3+4 = 2$ $\rightarrow$  The 4th value updates the <code class="language-plaintext highlighter-rouge">current_value</code> to $4$ and the <code class="language-plaintext highlighter-rouge">best_value</code> to $4$. This resets the subarray we were adding because $4$ alone has a higher sum than $1-3+4$.</li>
  <li>$4-1 = 1$ $\rightarrow$ <code class="language-plaintext highlighter-rouge">current_sum=1</code>, <code class="language-plaintext highlighter-rouge">best_sum=4</code></li>
  <li>$4-1 + 2 = 5$ $\rightarrow$ <code class="language-plaintext highlighter-rouge">current_sum=5</code>, <code class="language-plaintext highlighter-rouge">best_sum=5</code></li>
  <li>$4-1 + 2 + 1= 6$ $\rightarrow$ <code class="language-plaintext highlighter-rouge">current_sum=6</code>, <code class="language-plaintext highlighter-rouge">best_sum=6</code>, after this <code class="language-plaintext highlighter-rouge">best_sum</code> won’t be updated again.</li>
  <li>$4-1 + 2 + 1 -1 = 5$ $\rightarrow$ <code class="language-plaintext highlighter-rouge">current_sum=5</code>, <code class="language-plaintext highlighter-rouge">best_sum=6</code></li>
  <li>$4-1 + 2 + 1 -1 -5  = 0$ $\rightarrow$ <code class="language-plaintext highlighter-rouge">current_sum=0</code>, <code class="language-plaintext highlighter-rouge">best_sum=6</code></li>
  <li>$4-1 + 2 + 1 -1 -5 + 4 = 4$ $\rightarrow$ <code class="language-plaintext highlighter-rouge">current_sum=4</code>, <code class="language-plaintext highlighter-rouge">best_sum=6</code></li>
</ol>

<p>If we had an extra number (less than 2), we would have to update the subarray we were adding.</p>

<p>In general, in line 6 of the Kadane implementation we decide to switch to another subarray, this happens in step 2 and 3. Meanwhile, line 7 keeps the highest sum we got so far.</p>]]></content><author><name></name></author><category term="coding" /><category term="leetcode" /><summary type="html"><![CDATA[Kadane’s Algorithm is used to obtain the maximum subarray sum, as seen in the Leetcode 53. Maximum Subarray: Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum. A subarray is a contiguous part of an array. Example: Input: nums = [-2,1,-3,4,-1,2,1,-5,4] Output: 6 Explanation: [4,-1,2,1] has the largest sum = 6. Brute-force Approach Let’s take the example array: [-2,1,-3,4,-1,2,1,-5,4] We can solve the problem via brute-force but it goes as $O(n²)$: def maxSubArray(self, nums: List[int]) -&gt; int: best_sum = 0 current_sum = 0 if len(nums)==1: return nums[0] for i,x in enumerate(nums): current_sum=x for y in nums[i+1:]: current_sum = current_sum + y if current_sum&gt;best_sum: best_sum = current_sum return best_sum Basically, we calculate the following sums: Fix the first value: -2 1.1: -2+1 = -1 &lt;- best_sum 1.2: -2+1-3 = -4 1.3: -2+1-3+4 = 0 &lt;- best_sum 1.4: -2+1-3+4-1 = -1 …. Fix the fourth value: 4 4.1: 4-1 = 3 4.2: 4-1+2 = 5 &lt;- best_sum 4.3: 4-1+2+1 = 6 &lt;- best_sum, this won’t change …. About Kadane: Joseph Kadane is a mathematician that provided this algorithm to solve the maximum subarray sum problem in $O(n)$ time complexity: def maxSubarraySum(numbers: List[int]) -&gt; int: best_sum = nums[0] current_sum = nums[0] for x in nums[1:]: current_sum = max(x, current_sum + x) best_sum = max(best_sum, current_sum) return best_sum Easy? Not easy for me. Let’s dig deeper into why it works. The full sum array: Fix the first value: -2 $-2+1 = -1$ $\rightarrow$ The second value $1$ alone has a higher sum than $-2+1$, therefore we ditch the $-2$ and we begin counting from $1$ for a new subarray, current_sum=1, best_sum=1 $1-3 = -2$ $\rightarrow$ The third value is lower than the sum with the previous current_value ($-2&gt;-3$), we continue a new subarray from last step. current_sum=-2, best_sum=1 $1-3+4 = 2$ $\rightarrow$ The 4th value updates the current_value to $4$ and the best_value to $4$. This resets the subarray we were adding because $4$ alone has a higher sum than $1-3+4$. $4-1 = 1$ $\rightarrow$ current_sum=1, best_sum=4 $4-1 + 2 = 5$ $\rightarrow$ current_sum=5, best_sum=5 $4-1 + 2 + 1= 6$ $\rightarrow$ current_sum=6, best_sum=6, after this best_sum won’t be updated again. $4-1 + 2 + 1 -1 = 5$ $\rightarrow$ current_sum=5, best_sum=6 $4-1 + 2 + 1 -1 -5 = 0$ $\rightarrow$ current_sum=0, best_sum=6 $4-1 + 2 + 1 -1 -5 + 4 = 4$ $\rightarrow$ current_sum=4, best_sum=6 If we had an extra number (less than 2), we would have to update the subarray we were adding. In general, in line 6 of the Kadane implementation we decide to switch to another subarray, this happens in step 2 and 3. Meanwhile, line 7 keeps the highest sum we got so far.]]></summary></entry><entry><title type="html">SQL Notes</title><link href="http://localhost:4000/coding/sql/2022/03/20/mysql-notes/" rel="alternate" type="text/html" title="SQL Notes" /><published>2022-03-20T00:00:00-03:00</published><updated>2022-03-20T00:00:00-03:00</updated><id>http://localhost:4000/coding/sql/2022/03/20/mysql-notes</id><content type="html" xml:base="http://localhost:4000/coding/sql/2022/03/20/mysql-notes/"><![CDATA[<h2 id="join-vs-right-join-vs-left-join">JOIN vs. RIGHT JOIN vs. LEFT JOIN</h2>

<ul>
  <li>(INNER) JOIN: Returns records that have matching values in both tables</li>
</ul>

<p><img src="/media/inner_join.png" alt="This is website" title="This is website" /></p>

<ul>
  <li>
    <p>LEFT (OUTER) JOIN: Returns all records from the left table, and the matched records from the right table</p>
  </li>
  <li>
    <p>RIGHT (OUTER) JOIN: Returns all records from the right table, and the matched records from the left table</p>
  </li>
  <li>
    <p>FULL (OUTER) JOIN: Returns all records when there is a match in either left or right table</p>
  </li>
</ul>

<h2 id="having-vs-where">HAVING vs. WHERE</h2>]]></content><author><name></name></author><category term="coding" /><category term="SQL" /><summary type="html"><![CDATA[JOIN vs. RIGHT JOIN vs. LEFT JOIN (INNER) JOIN: Returns records that have matching values in both tables LEFT (OUTER) JOIN: Returns all records from the left table, and the matched records from the right table RIGHT (OUTER) JOIN: Returns all records from the right table, and the matched records from the left table FULL (OUTER) JOIN: Returns all records when there is a match in either left or right table HAVING vs. WHERE]]></summary></entry><entry><title type="html">Task 1 - Google CTF Beginners Quest 2021</title><link href="http://localhost:4000/coding/ctf/google/2022/02/28/google-beginner-ctf-2021/" rel="alternate" type="text/html" title="Task 1 - Google CTF Beginners Quest 2021" /><published>2022-02-28T00:00:00-03:00</published><updated>2022-02-28T00:00:00-03:00</updated><id>http://localhost:4000/coding/ctf/google/2022/02/28/google-beginner-ctf-2021</id><content type="html" xml:base="http://localhost:4000/coding/ctf/google/2022/02/28/google-beginner-ctf-2021/"><![CDATA[<p>CTF (Catch the Flag) in the programming world is a competition where you hack/solve puzzles in order to get a code to get the next puzzle. You might to use several tricks and a plenty of imagination to get something like this: <code class="language-plaintext highlighter-rouge">CTF{This_is_how_flags_usually_look_like}</code>.</p>

<p>A really nice introduction to what CTF competition is  <a href="https://www.youtube.com/watch?v=BFMmSJ3PRZM">LiveOverflow YouTube Channel</a> with their pros and cons. I took the Google CTF Beginners Quest 2021,  I have learned some interesting stuff so I wanted to make a post detailing some of them.</p>

<p>You can go and check this CFT at <a href="https://capturetheflag.withgoogle.com/beginners-quest">https://capturetheflag.withgoogle.com/beginners-quest</a>.</p>

<h2 id="task-1">Task 1:</h2>

<p>Get the password for this website <a href="https://cctv-web.2021.ctfcompetition.com/">https://cctv-web.2021.ctfcompetition.com/</a>, this is what it looks like.</p>

<p><img src="/media/task1nopass.png" alt="This is website" title="This is website" /></p>

<p>Check the inspect the html code using your favorite web browser. You get the following code:</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">checkPassword</span> <span class="o">=</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="nx">v</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="dl">"</span><span class="s2">password</span><span class="dl">"</span><span class="p">).</span><span class="nx">value</span><span class="p">;</span>
  <span class="kd">const</span> <span class="nx">p</span> <span class="o">=</span> <span class="nb">Array</span><span class="p">.</span><span class="k">from</span><span class="p">(</span><span class="nx">v</span><span class="p">).</span><span class="nx">map</span><span class="p">(</span><span class="nx">a</span> <span class="o">=&gt;</span> <span class="mh">0xCafe</span> <span class="o">+</span> <span class="nx">a</span><span class="p">.</span><span class="nx">charCodeAt</span><span class="p">(</span><span class="mi">0</span><span class="p">));</span>

  <span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">===</span> <span class="mi">52037</span> <span class="o">&amp;&amp;</span>
     <span class="nx">p</span><span class="p">[</span><span class="mi">6</span><span class="p">]</span> <span class="o">===</span> <span class="mi">52081</span> <span class="o">&amp;&amp;</span>
     <span class="nx">p</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span> <span class="o">===</span> <span class="mi">52063</span> <span class="o">&amp;&amp;</span>
     <span class="nx">p</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">===</span> <span class="mi">52077</span> <span class="o">&amp;&amp;</span>
     <span class="nx">p</span><span class="p">[</span><span class="mi">9</span><span class="p">]</span> <span class="o">===</span> <span class="mi">52077</span> <span class="o">&amp;&amp;</span>
     <span class="nx">p</span><span class="p">[</span><span class="mi">10</span><span class="p">]</span> <span class="o">===</span> <span class="mi">52080</span> <span class="o">&amp;&amp;</span>
     <span class="nx">p</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span> <span class="o">===</span> <span class="mi">52046</span> <span class="o">&amp;&amp;</span>
     <span class="nx">p</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span> <span class="o">===</span> <span class="mi">52066</span> <span class="o">&amp;&amp;</span>
     <span class="nx">p</span><span class="p">[</span><span class="mi">8</span><span class="p">]</span> <span class="o">===</span> <span class="mi">52085</span> <span class="o">&amp;&amp;</span>
     <span class="nx">p</span><span class="p">[</span><span class="mi">7</span><span class="p">]</span> <span class="o">===</span> <span class="mi">52081</span> <span class="o">&amp;&amp;</span>
     <span class="nx">p</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">===</span> <span class="mi">52077</span> <span class="o">&amp;&amp;</span>
     <span class="nx">p</span><span class="p">[</span><span class="mi">11</span><span class="p">]</span> <span class="o">===</span> <span class="mi">52066</span><span class="p">)</span> <span class="p">{</span>
    <span class="nb">window</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">v</span> <span class="o">+</span> <span class="dl">"</span><span class="s2">.html</span><span class="dl">"</span><span class="p">);</span>
  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
    <span class="nx">alert</span><span class="p">(</span><span class="dl">"</span><span class="s2">Wrong password!</span><span class="dl">"</span><span class="p">);</span>
  <span class="p">}</span>
<span class="p">}</span>

</code></pre></div></div>
<p>We enter the code and the program stores it inside the <code class="language-plaintext highlighter-rouge">const v</code>, then the code transforms the characters into integer values after adding <code class="language-plaintext highlighter-rouge">0xCafe</code>. To obtain the password, we need to check what values are stored in the <code class="language-plaintext highlighter-rouge">p[i]</code>: Python is our friend.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>import numpy as np

# Checking the code, we need at least 12 values

p = np.zeros(12)

p[0] = 52037
p[6] = 52081
p[5] = 52063
p[1] = 52077
p[9] = 52077
p[10]= 52080
p[4] = 52046
p[3] = 52066
p[8] = 52085
p[7] = 52081
p[2] = 52077 
p[11]= 52066 #12 values

#Convert 0xCafe to integer value
#16 is the ASCII base, represented by '0x'
offset = int('0xCafe',16) 

p -=  offset # Deletes the offset 

for i in p: 
     # Print the password
     print(chr(int(i)), end="")

</code></pre></div></div>

<p>And the password is <code class="language-plaintext highlighter-rouge">GoodPassword</code>, it takes you to a new page with the flag at the bottom.</p>

<p><img src="/media/task1pass.png" alt="This is website" title="This is website" /></p>]]></content><author><name></name></author><category term="coding" /><category term="CTF" /><category term="google" /><summary type="html"><![CDATA[CTF (Catch the Flag) in the programming world is a competition where you hack/solve puzzles in order to get a code to get the next puzzle. You might to use several tricks and a plenty of imagination to get something like this: CTF{This_is_how_flags_usually_look_like}. A really nice introduction to what CTF competition is LiveOverflow YouTube Channel with their pros and cons. I took the Google CTF Beginners Quest 2021, I have learned some interesting stuff so I wanted to make a post detailing some of them. You can go and check this CFT at https://capturetheflag.withgoogle.com/beginners-quest. Task 1: Get the password for this website https://cctv-web.2021.ctfcompetition.com/, this is what it looks like. Check the inspect the html code using your favorite web browser. You get the following code: const checkPassword = () =&gt; { const v = document.getElementById("password").value; const p = Array.from(v).map(a =&gt; 0xCafe + a.charCodeAt(0)); if(p[0] === 52037 &amp;&amp; p[6] === 52081 &amp;&amp; p[5] === 52063 &amp;&amp; p[1] === 52077 &amp;&amp; p[9] === 52077 &amp;&amp; p[10] === 52080 &amp;&amp; p[4] === 52046 &amp;&amp; p[3] === 52066 &amp;&amp; p[8] === 52085 &amp;&amp; p[7] === 52081 &amp;&amp; p[2] === 52077 &amp;&amp; p[11] === 52066) { window.location.replace(v + ".html"); } else { alert("Wrong password!"); } } We enter the code and the program stores it inside the const v, then the code transforms the characters into integer values after adding 0xCafe. To obtain the password, we need to check what values are stored in the p[i]: Python is our friend. import numpy as np # Checking the code, we need at least 12 values p = np.zeros(12) p[0] = 52037 p[6] = 52081 p[5] = 52063 p[1] = 52077 p[9] = 52077 p[10]= 52080 p[4] = 52046 p[3] = 52066 p[8] = 52085 p[7] = 52081 p[2] = 52077 p[11]= 52066 #12 values #Convert 0xCafe to integer value #16 is the ASCII base, represented by '0x' offset = int('0xCafe',16) p -= offset # Deletes the offset for i in p: # Print the password print(chr(int(i)), end="") And the password is GoodPassword, it takes you to a new page with the flag at the bottom.]]></summary></entry><entry><title type="html">Ayuda para el Ingreso IB</title><link href="http://localhost:4000/ingreso.html" rel="alternate" type="text/html" title="Ayuda para el Ingreso IB" /><published>2022-02-01T00:00:00-03:00</published><updated>2022-02-01T00:00:00-03:00</updated><id>http://localhost:4000/ingreso-IB</id><content type="html" xml:base="http://localhost:4000/ingreso.html"><![CDATA[<p>Editado por última vez: 14 de Enero, 2022</p>

<blockquote>
  <p>Querido <em>intentante</em> (como los alumnos de IB le dicen a los que planean rendir el examen de ingreso), bienvenido a esta locura. Podes encontrar cosas útiles y no tan útiles para ayudarte a ser un <em>ingresante</em> del IB.
Las ayudas son más para estudiantes de grado, pero posgrado y doctorado pueden pasar a mirar.</p>
</blockquote>

<h2 id="links-oficiales">Links Oficiales:</h2>

<ul>
  <li>
    <p><a href="https://www.ib.edu.ar/ingreso-a-carreras/carreras-de-grado.html">Página del Instituto Balseiro</a>: Ahí están los formularios, los deadlines, etc. Empezá por ahí.!</p>
  </li>
  <li>
    <p><a href="http://www.oraculoib.com.ar/login">El Oráculo</a>: Casi todos los exámenes de ingreso anteriores están ahí. Podés preguntar cosas ahí y te va a responder de forma “oficial”.</p>
  </li>
</ul>

<h2 id="links-no-oficiales">Links no oficiales:</h2>

<p>Estas son cosas manejadas por ex-alumnos, no esperes seriedad pero si vas a buscar ayuda la vas a encontrar</p>

<h3 id="para-hablar-con-alumnosegresadosotros-intentantes">Para hablar con alumnos/egresados/otros intentantes</h3>

<ul>
  <li><a href="https://discord.com/invite/xCtVGNC?ltclid=">Server de Discord</a></li>
  <li><a href="https://t.me/ingreso_IB?ltclid=">Telegram</a></li>
  <li><a href="https://chat.whatsapp.com/CKWPMsoeSe5ESsKzQhEKoe">WhatsApp</a></li>
</ul>

<h3 id="carpetas-con-exámenes-ayudas-propuestas-de-solución-etc">Carpetas con exámenes, ayudas, propuestas de solución, etc.</h3>
<p>Toma las propuestas de solución con pinzas, cualquier duda podés preguntar al oráculo:</p>

<ul>
  <li><a href="https://drive.google.com/drive/folders/10C-ePUZmmVFOeyetAIf66i4R4gVs_o4Q?usp=sharing">Examenes</a>: Libros, examenes, soluciones y más</li>
  <li><a href="https://drive.google.com/drive/folders/1irCFN91lF8Wn7cCmneICtjVk60ZaGabr?usp=sharing">Examenes+</a>: lista de muchos examenes + extra</li>
  <li><a href="https://drive.google.com/drive/folders/1ei976Bs3IFSyQNyrsMlWWf7AqEpNj7Wi?usp=sharing">Examenes++</a>: lista de muchos examenes</li>
  <li><a href="https://drive.google.com/drive/folders/1mCeoBLN7atnobJ0COzUTleAvF8vjS2tc">Examenes+++</a>: Soluciones de un alumno separados por tema</li>
</ul>

<h3 id="ayudas-para-antes-y-después-del-examen">Ayudas para antes y después del examen</h3>

<p>Estas guías están abiertas a comentarios, son cosas que nosotros (alumnos y egresados involucrados en los grupos) pensamos que son  relevantes:</p>

<ul>
  <li><a href="https://docs.google.com/document/d/1ftZD_dCKTkrblFLqZi4y6Ggojyb0XPpJl90pBmc9Leg/edit?usp=sharing">Ayuda para el examen según algunos alumnos/egresados</a></li>
  <li><a href="https://docs.google.com/document/d/1MYLyMqL3Nuad6JGbv4-2XNQdbzBnRzAXCgQh5yVI_F4/edit?usp=sharing">Ayuda para la entrevista</a></li>
  <li><a href="https://docs.google.com/document/d/1rUGDPtxBgIlyeq84obMY4dNhvVW4xRrizGc-M6_0yeU/edit?usp=sharing">¿Cómo es vivir en el IB-CAB?</a>: si para la desgracia de tu vida social, ingresaste.</li>
</ul>]]></content><author><name></name></author><category term="spanish" /><summary type="html"><![CDATA[Editado por última vez: 14 de Enero, 2022 Querido intentante (como los alumnos de IB le dicen a los que planean rendir el examen de ingreso), bienvenido a esta locura. Podes encontrar cosas útiles y no tan útiles para ayudarte a ser un ingresante del IB. Las ayudas son más para estudiantes de grado, pero posgrado y doctorado pueden pasar a mirar. Links Oficiales: Página del Instituto Balseiro: Ahí están los formularios, los deadlines, etc. Empezá por ahí.! El Oráculo: Casi todos los exámenes de ingreso anteriores están ahí. Podés preguntar cosas ahí y te va a responder de forma “oficial”. Links no oficiales: Estas son cosas manejadas por ex-alumnos, no esperes seriedad pero si vas a buscar ayuda la vas a encontrar Para hablar con alumnos/egresados/otros intentantes Server de Discord Telegram WhatsApp Carpetas con exámenes, ayudas, propuestas de solución, etc. Toma las propuestas de solución con pinzas, cualquier duda podés preguntar al oráculo: Examenes: Libros, examenes, soluciones y más Examenes+: lista de muchos examenes + extra Examenes++: lista de muchos examenes Examenes+++: Soluciones de un alumno separados por tema Ayudas para antes y después del examen Estas guías están abiertas a comentarios, son cosas que nosotros (alumnos y egresados involucrados en los grupos) pensamos que son relevantes: Ayuda para el examen según algunos alumnos/egresados Ayuda para la entrevista ¿Cómo es vivir en el IB-CAB?: si para la desgracia de tu vida social, ingresaste.]]></summary></entry><entry><title type="html">Github Repos of NN and DNN classes/code</title><link href="http://localhost:4000/gitgraduate.html" rel="alternate" type="text/html" title="Github Repos of NN and DNN classes/code" /><published>2022-01-01T00:00:00-03:00</published><updated>2022-01-01T00:00:00-03:00</updated><id>http://localhost:4000/github</id><content type="html" xml:base="http://localhost:4000/gitgraduate.html"><![CDATA[<p>Different repos for the people, I hope you find them useful</p>

<h2 id="nn-clasescode">NN Clases/Code</h2>

<p>Basic Neural Network introduction exercises  <a href="https://github.com/astrocronopio/NN_IB">in this link.</a></p>

<h2 id="dnn-clasescode">DNN Clases/Code</h2>

<p>Solutions to tutorial classes and more in <a href="https://github.com/astrocronopio/DNN_IB">this link.</a></p>

<h2 id="resources-for-hu-ml-für-physiker-classes---winter-term-20212022">Resources for HU ML für Physiker classes - Winter Term 2021/2022</h2>

<p>Datasets use for Exercises 4 to 6,  <a href="https://github.com/astrocronopio/datasets">here</a></p>]]></content><author><name></name></author><summary type="html"><![CDATA[Different repos for the people, I hope you find them useful NN Clases/Code Basic Neural Network introduction exercises in this link. DNN Clases/Code Solutions to tutorial classes and more in this link. Resources for HU ML für Physiker classes - Winter Term 2021/2022 Datasets use for Exercises 4 to 6, here]]></summary></entry></feed>